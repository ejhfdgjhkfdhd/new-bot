import telebot
import json
import os
from telebot import types

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
API_TOKEN = '8016620618:AAH6W4hJ-Jmy6qhqQrDCdQDUjbKEhSIhQYg'
bot = telebot.TeleBot(API_TOKEN)

# –í–±—É–¥–æ–≤–∞–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö
database = {
    "users": {}
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ —Ñ–∞–π–ª—É
def load_database():
    global database
    if os.path.exists('database.json'):
        with open('database.json', 'r') as file:
            database = json.load(file)
    else:
        database = {"users": {}}  # –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Ä–æ–∂–Ω—é –±–∞–∑—É

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —É —Ñ–∞–π–ª
def save_database():
    with open('database.json', 'w') as file:
        json.dump(database, file, indent=4)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def check_user_status(username, checker_username):
    if username not in database["users"]:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–∞—Ç—É—Å "—Å—Ç–∞–∂—ë—Ä"
        if database["users"].get(checker_username, None) == "—Å—Ç–∞–∂—ë—Ä":
            database["users"][username] = "—Å–∫–∞–º–º–µ—Ä"
            save_database()
            return {
                "text": f"üë§ {username} (https://ibb.co/RTvnJv5s)\n"
                        f"üõë –°—Ç–∞—Ç—É—Å: —Å–∫–∞–º–º–µ—Ä | ‚ö†Ô∏è 1 | ‚úÖ 0\n\n"
                        f"‚ù§Ô∏è –°—Ç—Ä–∞–Ω–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞\n\n"
                        f"üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: 1\n\n"
                        f"üëç –í—Å–µ–≥–¥–∞ –∏–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤ MENTAS, —á—Ç–æ–±—ã —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ\n\n"
                        f"üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0\n"
                        f"üîç –ó–∞–Ω—ë—Å: {checker_username}",
                "status": "—Å–∫–∞–º–º–µ—Ä"
            }
        else:
            return {
                "text": f"üë§ {username} (https://ibb.co/Q77XJCjW)\n"
                        f"üõë –°—Ç–∞—Ç—É—Å: –Ω–µ—Ç –≤ –±–∞–∑–µ. –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞: 30%\n\n"
                        f"‚ù§Ô∏è –°—Ç—Ä–∞–Ω–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞\n\n"
                        f"üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: 0\n\n"
                        f"üëç –í—Å–µ–≥–¥–∞ –∏–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤ MENTAS, —á—Ç–æ–±—ã —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ\n\n"
                        f"üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0\n"
                        f"üîç –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: {checker_username}",
                "status": "–Ω–µ—Ç –≤ –±–∞–∑–µ"
            }
    
    user_status = database["users"][username]
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Å—Ç–∞—Ç—É—Å —î —Ä—è–¥–∫–æ–º
    if isinstance(user_status, str) and user_status in status_texts:
        return {
            "text": status_texts[user_status]["text"].format(username=username),
            "status": user_status
        }
    else:
        return {
            "text": f"üë§ {username} –º–∞—î –Ω–µ–≤—ñ–¥–æ–º–∏–π —Å—Ç–∞—Ç—É—Å.",
            "status": "–Ω–µ–≤—ñ–¥–æ–º–∏–π"
        }

# –¢–µ–∫—Å—Ç–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å—ñ–≤
status_texts = {
    "–Ω–µ—Ç –≤ –±–∞–∑–µ": {
        "text": "üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {username} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π. –í–µ—Ä–æ—è—Ç–Ω—ñ—Å—Ç—å —Å–∫–∞–º–∞: 30%\n\n"
                "‚ù§Ô∏è –°—Ç—Ä–∞–Ω–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞\n\n"
                "üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: 0\n\n"
                "üëç –í—Å–µ–≥–¥–∞ –∏–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤ MENTAS, —á—Ç–æ–±—ã —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ\n\n"
                "üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç| üîç 0",
    },
    "–≥–∞—Ä–∞–Ω—Ç": {
        "text": "üë§ {username} (https://ibb.co/CsH16HQ2) #id5399940308\n\n"
                "üíô –†–µ–ø—É—Ç–∞—Ü—ñ—è: –ì–∞—Ä–∞–Ω—Ç ‚úÖ | ‚ö†Ô∏è 0\n"
                "‚ùì –ö—Ç–æ —Ç–∞–∫–æ–π –≥–∞—Ä–∞–Ω—Ç? (https://telegra.ph/Kto-takoj-GARANT-05-29)\n\n"
                "üåé –°—Ç—Ä–∞–Ω–∞: –ù–µ –∑–∞–¥–∞–Ω–∞ üí∏\n"
                "üî• –°–∫–∞–º–º–µ—Ä–æ–≤ —Å–ª–∏—Ç–æ: 0\n\n"
                "üëç –í—Å–µ–≥–¥–∞ –∏–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –≥–∞—Ä–∞–Ω—Ç–æ–≤ MENTAS, —á—Ç–æ–±—ã —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ\n\n"
                "üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0",
    },
    "—Å—Ç–∞–∂—ë—Ä": {
        "text": "üë§ {username} (https://ibb.co/qSjs5Lh) #id7213082439\n\n"
                "üíô –†–µ–ø—É—Ç–∞—Ü—ñ—è: –°—Ç–∞–∂—ë—Ä | ‚ö†Ô∏è 0 | ‚úÖ 0\n"
                "üíô –ü–µ—Ä—Å–æ–Ω–∞–ª [MENTAS]\n\n"
                "üåé –°—Ç—Ä–∞–Ω–∞: –ù–µ –∑–∞–¥–∞–Ω–∞ ü¶¶\n\n"
                "üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0",
    },
    "–≤–ª–∞–¥–µ–ª–µ—Ü": {
        "text": "üë§ {username} (https://ibb.co/Rpm4gsRR) #id496974176\n\n"
                "üíô –†–µ–ø—É—Ç–∞—Ü—ñ—è: –í–ª–∞–¥–µ–ª–µ—Ü | ‚ö†Ô∏è 0 | ‚úÖ 0\n"
                "üíô –ü–µ—Ä—Å–æ–Ω–∞–ª [MENTAS]\n\n"
                "üåé –°—Ç—Ä–∞–Ω–∞: –ù–µ –∑–∞–¥–∞–Ω–∞ ü¶õ\n\n"
                "üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0",
    },
    "–ø—Ä–æ–≤–µ—Ä–µ–Ω –≥–∞—Ä–∞–Ω—Ç–æ–º": {
        "text": "üë§ {username} (https://ibb.co/kszwJMGW) #id7460423631\n\n"
                "üíô –†–µ–ø—É—Ç–∞—Ü—ñ—è: –ü—Ä–æ–≤–µ—Ä–µ–Ω –≥–∞—Ä–∞–Ω—Ç–æ–º: {username}\n"
                "üíô –ü–µ—Ä—Å–æ–Ω–∞–ª [MENTAS](https://t.me/Mentas_Report)\n\n"
                "üåé –°—Ç—Ä–∞–Ω–∞: –Ω–µ—Ç—É\n\n"
                "üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0",
    },
    "—Å–∫–∞–º–º–µ—Ä": {
        "text": "üë§ {username} (https://ibb.co/RTvnJv5s) #id7213082439\n\n"
                "üõë –°—Ç–∞—Ç—É—Å: –°–∫–∞–º–º–µ—Ä ‚ö†Ô∏è\n"
                "üíô –†–µ–ø—É—Ç–∞—Ü—ñ—è: –°–∫–∞–º–º–µ—Ä | ‚ö†Ô∏è 0 | ‚úÖ 0\n\n"
                "üåé –°—Ç—Ä–∞–Ω–∞: –ù–µ –∑–∞–¥–∞–Ω–∞ ü¶¶\n\n"
                "üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0",
    },
    "–ø–µ—Ç—É—Ö": {
        "text": "üë§ {username} (https://ibb.co/Rpm4gsRR) #id496974176\n\n"
                "üõë –°—Ç–∞—Ç—É—Å: –ü–µ—Ç—É—Ö üêì\n"
                "üíô –†–µ–ø—É—Ç–∞—Ü—ñ—è: –ü–µ—Ç—É—Ö | ‚ö†Ô∏è 0 | ‚úÖ 0\n\n"
                "üåé –°—Ç—Ä–∞–Ω–∞: –ù–µ –∑–∞–¥–∞–Ω–∞ ü¶õ\n\n"
                "üóì –°–∫–æ—Ä–æ –±—É–¥–µ—Ç | üîç 0",
    },
}

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /—Å–∫–∞–º
@bot.message_handler(commands=['—Å–∫–∞–º'])
def handle_scam_command(message):
    if database["users"].get(message.from_user.username, None) == "—Å—Ç–∞–∂—ë—Ä":
        markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        btn_scammer = types.KeyboardButton("–°–∫–∞–º–º–µ—Ä")
        btn_petuh = types.KeyboardButton("–ü–µ—Ç—É—Ö")
        markup.add(btn_scammer, btn_petuh)

        bot.send_message(chat_id=message.chat.id, text="–í–∏–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", reply_markup=markup)

        @bot.message_handler(content_types=['text'])
        def handle_status_selection(message):
            if message.text == "–°–∫–∞–º–º–µ—Ä":
                username = message.reply_to_message.from_user.username
                database["users"][username] = "—Å–∫–∞–º–º–µ—Ä"
                save_database()
                bot.send_message(chat_id=message.chat.id, text=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {username} –∑–∞–Ω–µ—Å–µ–Ω–∏–π –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —è–∫ —Å–∫–∞–º–º–µ—Ä.")
            elif message.text == "–ü–µ—Ç—É—Ö":
                username = message.reply_to_message.from_user.username
                database["users"][username] = "–ø–µ—Ç—É—Ö"
                save_database()
                bot.send_message(chat_id=message.chat.id, text=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {username} –∑–∞–Ω–µ—Å–µ–Ω–∏–π –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —è–∫ –ø–µ—Ç—É—Ö.")
            else:
                bot.send_message(chat_id=message.chat.id, text="–ù–µ–≤—ñ—Ä–Ω–∞ –∫–æ–º–∞–Ω–¥–∞.")
    else:
        bot.reply_to(message, "–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —Ü—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –¥–ª—è —Å—Ç–∞–∂–µ—Ä—ñ–≤.")

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤–∏–¥–∞—á—ñ —Å—Ç–∞—Ç—É—Å—ñ–≤
@bot.message_handler(commands=['–≥–∞—Ä–∞–Ω—Ç', '—Å–æ–∑–¥–∞—Ç–µ–ª—å', '—Å—Ç–∞–∂—ë—Ä', 'trust', '–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç', '–¥–∏—Ä–µ–∫—Ç–æ—Ä', '–≤–ª–∞–¥–µ–ª–µ—Ü', '–ø–µ—Ç—É—Ö'])
def handle_status_command(message):
    status_map = {
        '–≥–∞—Ä–∞–Ω—Ç': "–≥–∞—Ä–∞–Ω—Ç",
        '—Å–æ–∑–¥–∞—Ç–µ–ª—å': "–≤–ª–∞–¥–µ–ª–µ—Ü",
        '—Å—Ç–∞–∂—ë—Ä': "—Å—Ç–∞–∂—ë—Ä",
        'trust': "–ø—Ä–æ–≤–µ—Ä–µ–Ω –≥–∞—Ä–∞–Ω—Ç–æ–º",
        '–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç': "–Ω–µ—Ç –≤ –±–∞–∑–µ",  # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        '–¥–∏—Ä–µ–∫—Ç–æ—Ä': "–Ω–µ—Ç –≤ –±–∞–∑–µ",  # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        '–≤–ª–∞–¥–µ–ª–µ—Ü': "–≤–ª–∞–¥–µ–ª–µ—Ü",
        '–ø–µ—Ç—É—Ö': "–ø–µ—Ç—É—Ö",
    }

    command = message.text[1:]  # –í–∏—Ç—è–≥—É—î–º–æ –∫–æ–º–∞–Ω–¥—É –±–µ–∑ —Å–ª–µ—à—É
    if command in status_map and message.reply_to_message:
        status_key = status_map[command]
        response_text = status_texts[status_key]["text"]
        
        # –Ø–∫—â–æ —Å—Ç–∞—Ç—É—Å "–ø—Ä–æ–≤–µ—Ä–µ–Ω –≥–∞—Ä–∞–Ω—Ç–æ–º", –≤—Å—Ç–∞–≤–ª—è—î–º–æ —ñ–º'—è –≥–∞—Ä–∞–Ω—Ç–∞
        if status_key == "–ø—Ä–æ–≤–µ—Ä–µ–Ω –≥–∞—Ä–∞–Ω—Ç–æ–º":
            guardian_name = message.from_user.username  # –Ü–º'—è –≥–∞—Ä–∞–Ω—Ç–∞
            response_text = response_text.format(username=guardian_name)
        else:
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞—Ç—É—Å —É –±–∞–∑—É –¥–∞–Ω–∏—Ö
            username = message.reply_to_message.from_user.username
            database["users"][username] = status_key
            save_database()  # –ó–±–µ—Ä—ñ–≥–∞—î–º

        bot.send_message(chat_id=message.chat.id, text=response_text)

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@bot.message_handler(func=lambda message: True)
def handle_commands(message):
    command = message.text.lower()

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –≤–ª–∞—Å–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if command in ['—á–µ–∫ –º–∏', '—á–µ–∫ —è', '—á–µ–∫ –º–µ–Ω–µ']:
        username = message.from_user.username
        status_info = check_user_status(username, username)
        bot.reply_to(message, status_info["text"])

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ @—ñ–º'—è–º
    elif command.startswith('—á–µ–∫ @'):
        username = command[5:]  # –í–∏—Ç—è–≥—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        status_info = check_user_status(username, message.from_user.username)
        bot.reply_to(message, status_info["text"])

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–¥—é –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    elif message.reply_to_message:
        username = message.reply_to_message.from_user.username
        status_info = check_user_status(username, message.from_user.username)
        bot.reply_to(message, status_info["text"])

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
load_database()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()